/* CVS $Id: $ */
package net.opentechnology.triki.schema; 
import org.apache.jena.rdf.model.*;
import org.apache.jena.ontology.*;
 
/**
 * Vocabulary definitions from src/main/resources/rdf/exif.rdf 
 * @author Auto-generated by schemagen on 28 May 2019 14:26 
 */
public class Exif {
    /** <p>The ontology model that holds the vocabulary terms</p> */
    private static OntModel m_model = ModelFactory.createOntologyModel( OntModelSpec.OWL_MEM, null );
    
    /** <p>The namespace of the vocabulary as a string</p> */
    public static final String NS = "http://www.w3.org/2003/12/exif/ns#";
    
    /** <p>The namespace of the vocabulary as a string</p>
     *  @see #NS */
    public static String getURI() {return NS;}
    
    /** <p>The namespace of the vocabulary as a resource</p> */
    public static final Resource NAMESPACE = m_model.createResource( NS );
    
    /** <p>The ontology's owl:versionInfo as a string</p> */
    public static final String VERSION_INFO = "Experimental version.";
    
    /** <p>An Exif tag whose meaning is not known</p> */
    public static final OntProperty _unknown = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#_unknown" );
    
    /** <p>レンズ絞り値（APEX値）。この値のルート2のベキ乗を取ると、通常の絞り値となる。例えば'5'の場合だと√2^5=F5.6The lens aperture. 
     *  The unit is the APEX value.</p>
     */
    public static final OntProperty apertureValue = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#apertureValue" );
    
    /** <p>Person who created the image</p> */
    public static final OntProperty artist = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#artist" );
    
    /** <p>The number of bits per image component. In this standard each component of 
     *  the image is 8 bits, so the value for this tag is 8. See also SamplesPerPixel. 
     *  In JPEG compressed data a JPEG marker is used instead of this tag.</p>
     */
    public static final OntProperty bitsPerSample = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#bitsPerSample" );
    
    /** <p>The value of brightness. The unit is the APEX value. Ordinarily it is given 
     *  in the range of -99.99 to 99.99. Note that if the numerator of the recorded 
     *  value is FFFFFFFF.H, Unknown shall be indicated.画像撮影時の撮影対象物の明るさ（APEX値）。EVにするにはISO感度の値を足す必要があり、Ev:Exposure, 
     *  Bv:BrightnessValue, Sv:SensitivityValueとしてEv=Bv+Sv Sv=log^2(ISOSpeedRating/3.125)という計算式を使う。ISO感度100の場合Sv=5、ISO200の場合Sv=6、ISO125ではSv=5.32</p>
     */
    public static final OntProperty brightnessValue = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#brightnessValue" );
    
    /** <p>CCDに付いているColor filter array(CFA)のパターン。例えば普通のRGBフィルターだと、CFAPatternのデータは 02 
     *  02 00 01 01 02The color filter array (CFA) geometric pattern of the image 
     *  sensor when a one-chip color area sensor is used. It does not apply to all 
     *  sensing methods.</p>
     */
    public static final OntProperty cfaPattern = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#cfaPattern" );
    
    /** <p>使われる色空間。通常sRGBThe color space information tag (ColorSpace) is always recorded 
     *  as the color space specifier. Normally sRGB (=1) is used to define the color 
     *  space based on the PC monitor conditions and environment.</p>
     */
    public static final OntProperty colorSpace = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#colorSpace" );
    
    /** <p>圧縮データがYCC以外の並びの場合、4バイトでその並びを示す。それぞれの値は0:not exist,1:Y,2:Cb,3:Cr,4:R,5:G,6:BInformation 
     *  specific to compressed data. The channels of each component are arranged in 
     *  order from the 1st component to the 4th. For uncompressed data the data arrangement 
     *  is given in the PhotometricInterpretation tag. However, since PhotometricInterpretation 
     *  can only express the order of Y,Cb and Cr, this tag is provided for cases 
     *  when compressed data uses components other than Y, Cb, and Cr and to enable 
     *  support of other sequences.</p>
     */
    public static final OntProperty componentsConfiguration = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#componentsConfiguration" );
    
    /** <p>Information specific to compressed data. The compression mode used for a compressed 
     *  image is indicated in unit bits per pixel.画像の圧縮率</p>
     */
    public static final OntProperty compressedBitsPerPixel = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#compressedBitsPerPixel" );
    
    /** <p>The compression scheme used for the image data. When a primary image is JPEG 
     *  compressed, this designation is not necessary and is omitted. When thumbnails 
     *  use JPEG compression, this tag value is set to 6.</p>
     */
    public static final OntProperty compression = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#compression" );
    
    /** <p>The direction of contrast processing applied by the camera when the image 
     *  was shot.</p>
     */
    public static final OntProperty contrast = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#contrast" );
    
    /** <p>この画像の撮影者および編集者の著作権情報Copyright information. In this standard the tag is used 
     *  to indicate both the photographer and editor copyrights. It is the copyright 
     *  notice of the person or organization claiming rights to the image.</p>
     */
    public static final OntProperty copyright = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#copyright" );
    
    /** <p>The use of special processing on image data, such as rendering geared to output. 
     *  When special processing is performed, the reader is expected to disable or 
     *  minimize any further processing.特別なレンダリング処理を行っているかどうか</p>
     */
    public static final OntProperty customRendered = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#customRendered" );
    
    /** <p>The Exif field data type, such as ascii, byte, short etc.</p> */
    public static final OntProperty datatype = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#datatype" );
    
    /** <p>a date information. Usually saved as YYYY:MM:DD (HH:MM:SS) format in Exif 
     *  data, but represented here as W3C-DTF format</p>
     */
    public static final OntProperty date = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#date" );
    
    /** <p>An attribute relating to Date and/or Time</p> */
    public static final OntProperty dateAndOrTime = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#dateAndOrTime" );
    
    /** <p>The date and time of image creation. In this standard it is the date and time 
     *  the file was changed.この画像が作成（あるいは最後に変更された）日時。通常はDateTimeOriginaと同じ値</p>
     */
    public static final OntProperty dateTime = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#dateTime" );
    
    /** <p>画像がデジタル化された日時。デジカメ画像なら通常DateTimeOriginalと同じ値The date and time when the image 
     *  was stored as digital data. If, for example, an image was captured by DSC 
     *  and at the same time the file was recorded, then the DateTimeOriginal and 
     *  DateTimeDigitized will have the same contents.</p>
     */
    public static final OntProperty dateTimeDigitized = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#dateTimeDigitized" );
    
    /** <p>オリジナル画像が作成（撮影）された日時The date and time when the original image data was generated. 
     *  For a DSC the date and time the picture was taken are recorded.</p>
     */
    public static final OntProperty dateTimeOriginal = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#dateTimeOriginal" );
    
    /** <p>Information on the picture-taking conditions of a particular camera model. 
     *  The tag is used only to indicate the picture-taking conditions in the reader.</p>
     */
    public static final OntProperty deviceSettingDescription = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#deviceSettingDescription" );
    
    /** <p>The digital zoom ratio when the image was shot. If the numerator of the recorded 
     *  value is 0, this indicates that digital zoom was not used.デジタルズームが使われた場合、その比率</p>
     */
    public static final OntProperty digitalZoomRatio = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#digitalZoomRatio" );
    
    /** <p>A property that connects an IFD to one of its entries. Super property which 
     *  integrates all Exif tags.</p>
     */
    public static final OntProperty exifAttribute = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#exifAttribute" );
    
    /** <p>Exif VersionExif形式のバージョン</p> */
    public static final OntProperty exifVersion = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#exifVersion" );
    
    /** <p>Exif IFDへのポインタA pointer to the Exif IFD, which is a set of tags for recording 
     *  Exif-specific attribute information.</p>
     */
    public static final OntProperty exif_IFD_Pointer = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#exif_IFD_Pointer" );
    
    /** <p>An Exif IFD data entry</p> */
    public static final OntProperty exifdata = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#exifdata" );
    
    /** <p>撮影時の露光補正量。単位はAPEX値(EV)The exposure bias. The unit is the APEX value. Ordinarily 
     *  it is given in the range of -99.99 to 99.99.</p>
     */
    public static final OntProperty exposureBiasValue = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#exposureBiasValue" );
    
    /** <p>The exposure index selected on the camera or input device at the time the 
     *  image is captured.CCD感度。データ形式が符号なし分数である事を除き、ISOSpeedRatingsと同じ</p>
     */
    public static final OntProperty exposureIndex = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#exposureIndex" );
    
    /** <p>the exposure mode set when the image was shot. In auto-bracketing mode, the 
     *  camera shoots a series of frames of the same scene at different exposure settings.露光モード</p>
     */
    public static final OntProperty exposureMode = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#exposureMode" );
    
    /** <p>The class of the program used by the camera to set exposure when the picture 
     *  is taken.露光制御のモード</p>
     */
    public static final OntProperty exposureProgram = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#exposureProgram" );
    
    /** <p>Exposure time, given in seconds (sec).露光時間（シャッター速度の逆数）。単位は秒</p> */
    public static final OntProperty exposureTime = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#exposureTime" );
    
    /** <p>レンズのF値F number</p> */
    public static final OntProperty fNumber = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#fNumber" );
    
    /** <p>The image source. If a DSC recorded the image, this tag value of this tag 
     *  always be set to 3, indicating that the image was recorded on a DSC.画像がどういうデバイスから得られたか。通常3=DSC</p>
     */
    public static final OntProperty fileSource = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#fileSource" );
    
    /** <p>The status of flash when the image was shot.フラッシュ発光の状態</p> */
    public static final OntProperty flash = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#flash" );
    
    /** <p>The strobe energy at the time the image is captured, as measured in Beam Candle 
     *  Power Seconds (BCPS).BCPSによるストロボの強度</p>
     */
    public static final OntProperty flashEnergy = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#flashEnergy" );
    
    /** <p>The Flashpix format version supported by a FPXR file. If the FPXR function 
     *  supports Flashpix format Ver. 1.0, this is indicated similarly to ExifVersion 
     *  by recording "0100" as 4-byte ASCII.</p>
     */
    public static final OntProperty flashpixVersion = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#flashpixVersion" );
    
    /** <p>レンズの焦点距離。単位はmmThe actual focal length of the lens, in mm. Conversion is not 
     *  made to the focal length of a 35 mm film camera.</p>
     */
    public static final OntProperty focalLength = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#focalLength" );
    
    /** <p>The equivalent focal length assuming a 35mm film camera, in mm. A value of 
     *  0 means the focal length is unknown. Note that this tag differs from the FocalLength 
     *  tag.35mm換算した焦点距離</p>
     */
    public static final OntProperty focalLengthIn35mmFilm = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#focalLengthIn35mmFilm" );
    
    /** <p>The unit for measuring FocalPlaneXResolution and FocalPlaneYResolution. This 
     *  value is the same as the ResolutionUnit.CCD画素密度の単位</p>
     */
    public static final OntProperty focalPlaneResolutionUnit = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#focalPlaneResolutionUnit" );
    
    /** <p>撮影画像のCCD位置での水平解像度。この値とFocalPlaneYResolution、FocalLengthを使うと、レンズ焦点距離の35mmカメラ換算値が計算できる。例えば200万画素機を使いVGAモードの画像を撮ったような場合はこの値はVGAの解像度でリサンプルされた値になっており、CCDの画素ピッチそのままの値ではないので注意が必要The 
     *  number of pixels in the image width (X) direction per FocalPlaneResolutionUnit 
     *  on the camera focal plane.</p>
     */
    public static final OntProperty focalPlaneXResolution = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#focalPlaneXResolution" );
    
    /** <p>The number of pixels in the image height (Y) direction per FocalPlaneResolutionUnit 
     *  on the camera focal plane.撮影画像のCCD位置での垂直解像度</p>
     */
    public static final OntProperty focalPlaneYResolution = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#focalPlaneYResolution" );
    
    /** <p>The degree of overall image gain adjustment.</p> */
    public static final OntProperty gainControl = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#gainControl" );
    
    /** <p>Geometric data such as latitude, longitude and altitude. Usually saved as 
     *  rational number.</p>
     */
    public static final OntProperty geo = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#geo" );
    
    /** <p>The altitude based on the reference in GPSAltitudeRef. Altitude is expressed 
     *  as one RATIONAL value. The reference unit is meters.</p>
     */
    public static final OntProperty gpsAltitude = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#gpsAltitude" );
    
    /** <p>Indicates the altitude used as the reference altitude. If the reference is 
     *  sea level and the altitude is above sea level, 0 is given. If the altitude 
     *  is below sea level, a value of 1 is given and the altitude is indicated as 
     *  an absolute value in the GPSAltitude tag. The reference unit is meters.</p>
     */
    public static final OntProperty gpsAltitudeRef = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#gpsAltitudeRef" );
    
    /** <p>A character string recording the name of the GPS area. The first byte indicates 
     *  the character code used, and this is followed by the name of the GPS area.</p>
     */
    public static final OntProperty gpsAreaInformation = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#gpsAreaInformation" );
    
    /** <p>The GPS DOP (data degree of precision). An HDOP value is written during two-dimensional 
     *  measurement, and PDOP during three-dimensional measurement.</p>
     */
    public static final OntProperty gpsDOP = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#gpsDOP" );
    
    /** <p>date and time information relative to UTC (Coordinated Universal Time). The 
     *  record format is "YYYY:MM:DD" while converted to W3C-DTF to use in RDF</p>
     */
    public static final OntProperty gpsDateStamp = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#gpsDateStamp" );
    
    /** <p>The bearing to the destination point. The range of values is from 0.00 to 
     *  359.99.</p>
     */
    public static final OntProperty gpsDestBearing = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#gpsDestBearing" );
    
    /** <p>Indicates the reference used for giving the bearing to the destination point. 
     *  'T' denotes true direction and 'M' is magnetic direction.</p>
     */
    public static final OntProperty gpsDestBearingRef = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#gpsDestBearingRef" );
    
    /** <p>The distance to the destination point.</p> */
    public static final OntProperty gpsDestDistance = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#gpsDestDistance" );
    
    /** <p>Indicates the unit used to express the distance to the destination point. 
     *  'K', 'M' and 'N' represent kilometers, miles and knots.</p>
     */
    public static final OntProperty gpsDestDistanceRef = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#gpsDestDistanceRef" );
    
    /** <p>Latitude of destination, expressed as three values giving the degrees, minutes, 
     *  and seconds, respectively.</p>
     */
    public static final OntProperty gpsDestLatitude = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#gpsDestLatitude" );
    
    /** <p>Reference for latitude of destination</p> */
    public static final OntProperty gpsDestLatitudeRef = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#gpsDestLatitudeRef" );
    
    /** <p>Longitude of destination, expressed as three values giving the degrees, minutes, 
     *  and seconds, respectively.</p>
     */
    public static final OntProperty gpsDestLongitude = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#gpsDestLongitude" );
    
    /** <p>Reference for longitude of destination</p> */
    public static final OntProperty gpsDestLongitudeRef = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#gpsDestLongitudeRef" );
    
    /** <p>Indicates whether differential correction is applied to the GPS receiver.</p> */
    public static final OntProperty gpsDifferential = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#gpsDifferential" );
    
    /** <p>The direction of the image when it was captured. The range of values is from 
     *  0.00 to 359.99.</p>
     */
    public static final OntProperty gpsImgDirection = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#gpsImgDirection" );
    
    /** <p>The reference for giving the direction of the image when it is captured. 'T' 
     *  denotes true direction and 'M' is magnetic direction.</p>
     */
    public static final OntProperty gpsImgDirectionRef = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#gpsImgDirectionRef" );
    
    /** <p>An attribute relating to GPS information</p> */
    public static final OntProperty gpsInfo = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#gpsInfo" );
    
    /** <p>A pointer to the GPS IFD, which is a set of tags for recording GPS information.GPS 
     *  IFDへのポインタ</p>
     */
    public static final OntProperty gpsInfo_IFD_Pointer = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#gpsInfo_IFD_Pointer" );
    
    /** <p>The latitude, expressed as three values giving the degrees, minutes, and seconds, 
     *  respectively.緯度</p>
     */
    public static final OntProperty gpsLatitude = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#gpsLatitude" );
    
    /** <p>Indicates whether the latitude is north or south latitude. The ASCII value 
     *  'N' indicates north latitude, and 'S' is south latitude.緯度の北緯もしくは南緯</p>
     */
    public static final OntProperty gpsLatitudeRef = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#gpsLatitudeRef" );
    
    /** <p>The longitude, expressed as three values giving the degrees, minutes, and 
     *  seconds, respectively.経度</p>
     */
    public static final OntProperty gpsLongitude = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#gpsLongitude" );
    
    /** <p>Indicates whether the longitude is east or west longitude. ASCII 'E' indicates 
     *  east longitude, and 'W' is west longitude.経度の東経もしくは西経</p>
     */
    public static final OntProperty gpsLongitudeRef = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#gpsLongitudeRef" );
    
    /** <p>The geodetic survey data used by the GPS receiver. If the survey data is restricted 
     *  to Japan, the value of this tag is 'TOKYO' or 'WGS-84'. If a GPS Info tag 
     *  is recorded, it is strongly recommended that this tag be recorded.測地系。日本なら'TOKYO'もしくは'WGS-84'</p>
     */
    public static final OntProperty gpsMapDatum = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#gpsMapDatum" );
    
    /** <p>The GPS measurement mode. '2' means two-dimensional measurement and '3' means 
     *  three-dimensional measurement is in progress.</p>
     */
    public static final OntProperty gpsMeasureMode = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#gpsMeasureMode" );
    
    /** <p>A character string recording the name of the method used for location finding. 
     *  The first byte indicates the character code used, and this is followed by 
     *  the name of the method.</p>
     */
    public static final OntProperty gpsProcessingMethod = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#gpsProcessingMethod" );
    
    /** <p>The GPS satellites used for measurements. This tag can be used to describe 
     *  the number of satellites, their ID number, angle of elevation, azimuth, SNR 
     *  and other information in ASCII notation. The format is not specified. If the 
     *  GPS receiver is incapable of taking measurements, value of the tag shall be 
     *  set to NULL.</p>
     */
    public static final OntProperty gpsSatellites = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#gpsSatellites" );
    
    /** <p>The speed of GPS receiver movement.</p> */
    public static final OntProperty gpsSpeed = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#gpsSpeed" );
    
    /** <p>The unit used to express the GPS receiver speed of movement. 'K' 'M' and 'N' 
     *  represents kilometers per hour, miles per hour, and knots.</p>
     */
    public static final OntProperty gpsSpeedRef = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#gpsSpeedRef" );
    
    /** <p>The status of the GPS receiver when the image is recorded. 'A' means measurement 
     *  is in progress, and 'V' means the measurement is Interoperability.</p>
     */
    public static final OntProperty gpsStatus = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#gpsStatus" );
    
    /** <p>The time as UTC (Coordinated Universal Time). TimeStamp is expressed as three 
     *  RATIONAL values giving the hour, minute, and second.</p>
     */
    public static final OntProperty gpsTimeStamp = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#gpsTimeStamp" );
    
    /** <p>The direction of GPS receiver movement. The range of values is from 0.00 to 
     *  359.99.</p>
     */
    public static final OntProperty gpsTrack = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#gpsTrack" );
    
    /** <p>The reference for giving the direction of GPS receiver movement. 'T' denotes 
     *  true direction and 'M' is magnetic direction.</p>
     */
    public static final OntProperty gpsTrackRef = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#gpsTrackRef" );
    
    /** <p>The version of GPSInfoIFD. The version is given as 2.2.0.0. This tag is mandatory 
     *  when GPSInfo tag is present.</p>
     */
    public static final OntProperty gpsVersionID = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#gpsVersionID" );
    
    /** <p>Height of an object</p> */
    public static final OntProperty height = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#height" );
    
    /** <p>A tag that refers a child IFD</p> */
    public static final OntProperty ifdPointer = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#ifdPointer" );
    
    /** <p>An attribute relating to Image Configuration</p> */
    public static final OntProperty imageConfig = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#imageConfig" );
    
    /** <p>An attribute relating to image data characteristics</p> */
    public static final OntProperty imageDataCharacter = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#imageDataCharacter" );
    
    /** <p>An attribute relating to image data structure</p> */
    public static final OntProperty imageDataStruct = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#imageDataStruct" );
    
    /** <p>A character string giving the title of the image. It may be a comment such 
     *  as "1988 company picnic" or the like. Two-byte character codes cannot be used. 
     *  When a 2-byte code is necessary, the Exif Private tag UserComment is to be 
     *  used.この画像についての説明。漢字等の2バイト文字の使用は禁止</p>
     */
    public static final OntProperty imageDescription = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#imageDescription" );
    
    /** <p>Image height. The number of rows of image data. In JPEG compressed data a 
     *  JPEG marker is used.</p>
     */
    public static final OntProperty imageLength = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#imageLength" );
    
    /** <p>An identifier assigned uniquely to each image. It is recorded as an ASCII 
     *  string equivalent to hexadecimal notation and 128-bit fixed length.</p>
     */
    public static final OntProperty imageUniqueID = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#imageUniqueID" );
    
    /** <p>Image width. The number of columns of image data, equal to the number of pixels 
     *  per row. In JPEG compressed data a JPEG marker is used instead of this tag.</p>
     */
    public static final OntProperty imageWidth = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#imageWidth" );
    
    /** <p>An attribute relating to Interoperability. Tags stored in Interoperability 
     *  IFD may be defined dependently to each Interoperability rule.</p>
     */
    public static final OntProperty interopInfo = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#interopInfo" );
    
    /** <p>メイン画像のInteroperability IFDで、データの内容がExifR98 v1.0準拠の場合は、'R98'の文字列。サムネィル画像のInteroperability 
     *  IFDの場合は、'THM'の文字列Indicates the identification of the Interoperability rule. 
     *  'R98' = conforming to R98 file specification of Recommended Exif Interoperability 
     *  Rules (ExifR98) or to DCF basic file stipulated by Design Rule for Camera 
     *  File System. 'THM' = conforming to DCF thumbnail file stipulated by Design 
     *  rule for Camera File System.</p>
     */
    public static final OntProperty interoperabilityIndex = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#interoperabilityIndex" );
    
    /** <p>データの内容がExifR98 v1.0準拠の場合は、'0100'の文字列。Interoperability Version</p> */
    public static final OntProperty interoperabilityVersion = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#interoperabilityVersion" );
    
    /** <p>A pointer to the Interoperability IFD, which is composed of tags storing the 
     *  information to ensure the InteroperabilityInteroperability IFDへのポインタ</p>
     */
    public static final OntProperty interoperability_IFD_Pointer = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#interoperability_IFD_Pointer" );
    
    /** <p>CCD感度の銀塩フィルム換算値Indicates the ISO Speed and ISO Latitude of the camera or input 
     *  device as specified in ISO 12232.</p>
     */
    public static final OntProperty isoSpeedRatings = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#isoSpeedRatings" );
    
    /** <p>The offset to the start byte (SOI) of JPEG compressed thumbnail data. This 
     *  is not used for primary image JPEG data.圧縮されたサムネイルへのオフセット</p>
     */
    public static final OntProperty jpegInterchangeFormat = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#jpegInterchangeFormat" );
    
    /** <p>The number of bytes of JPEG compressed thumbnail data. This is not used for 
     *  primary image JPEG data.圧縮されたサムネイルのサイズ</p>
     */
    public static final OntProperty jpegInterchangeFormatLength = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#jpegInterchangeFormatLength" );
    
    /** <p>Length of an object. Could be a subProperty of other general schema.</p> */
    public static final OntProperty length = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#length" );
    
    /** <p>Light source such as Daylight, Tungsten, Flash etc.光源。これはマニュアルでホワイトバランスを設定した場合のモード値となる</p> */
    public static final OntProperty lightSource = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#lightSource" );
    
    /** <p>カメラのメーカー名。DCFでは必須Manufacturer of image input equipment</p> */
    public static final OntProperty make = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#make" );
    
    /** <p>Manufacturer notesカメラの内部情報等、メーカー依存データ</p> */
    public static final OntProperty makerNote = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#makerNote" );
    
    /** <p>レンズの開放F値。ApertureValue同様、ルート2のベキ乗を取ると通常の絞り値に換算できるThe smallest F number of 
     *  the lens. The unit is the APEX value. Ordinarily it is given in the range 
     *  of 00.00 to 99.99, but it is not limited to this range.</p>
     */
    public static final OntProperty maxApertureValue = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#maxApertureValue" );
    
    /** <p>A length with unit of meter</p> */
    public static final OntProperty meter = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#meter" );
    
    /** <p>Metering mode, such as CenterWeightedAverage, Spot, MultiSpot,Pattern, Partial 
     *  etc.自動露出の測光モード</p>
     */
    public static final OntProperty meteringMode = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#meteringMode" );
    
    /** <p>A length with unit of mm</p> */
    public static final OntProperty mm = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#mm" );
    
    /** <p>Model of image input equipmentカメラの機種名。DCFでは必須</p> */
    public static final OntProperty model = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#model" );
    
    /** <p>Indicates the Opto-Electric Conversion Function (OECF) specified in ISO 14524. 
     *  OECF is the relationship between the camera optical input and the image values.</p>
     */
    public static final OntProperty oecf = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#oecf" );
    
    /** <p>画像データがどこ(top-leftなど）を起点として、どの向きで格納されているかThe image orientation viewed in terms 
     *  of rows and columns.</p>
     */
    public static final OntProperty orientation = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#orientation" );
    
    /** <p>Pixel composition. In JPEG compressed data a JPEG marker is used instead of 
     *  this tag.</p>
     */
    public static final OntProperty photometricInterpretation = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#photometricInterpretation" );
    
    /** <p>An attribute relating to Picture-Taking Conditions</p> */
    public static final OntProperty pictTaking = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#pictTaking" );
    
    /** <p>Brightness info for print image matching</p> */
    public static final OntProperty pimBrightness = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#pimBrightness" );
    
    /** <p>ColorBalance info for print image matching</p> */
    public static final OntProperty pimColorBalance = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#pimColorBalance" );
    
    /** <p>Contrast info for print image matching</p> */
    public static final OntProperty pimContrast = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#pimContrast" );
    
    /** <p>An attribute relating to print image matching</p> */
    public static final OntProperty pimInfo = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#pimInfo" );
    
    /** <p>Saturation info for print image matching</p> */
    public static final OntProperty pimSaturation = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#pimSaturation" );
    
    /** <p>Sharpness info for print image matching</p> */
    public static final OntProperty pimSharpness = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#pimSharpness" );
    
    /** <p>Information specific to compressed data. When a compressed file is recorded, 
     *  the valid width of the meaningful image shall be recorded in this tag, whether 
     *  or not there is padding data or a restart marker. This tag should not exist 
     *  in an uncompressed file.</p>
     */
    public static final OntProperty pixelXDimension = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#pixelXDimension" );
    
    /** <p>Information specific to compressed data. When a compressed file is recorded, 
     *  the valid height of the meaningful image shall be recorded in this tag, whether 
     *  or not there is padding data or a restart marker. This tag should not exist 
     *  in an uncompressed file. Since data padding is unnecessary in the vertical 
     *  direction, the number of lines recorded in this valid image height tag will 
     *  in fact be the same as that recorded in the SOF.</p>
     */
    public static final OntProperty pixelYDimension = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#pixelYDimension" );
    
    /** <p>Indicates whether pixel components are recorded in chunky or planar format. 
     *  In JPEG compressed files a JPEG marker is used instead of this tag. If this 
     *  field does not exist, the TIFF default of 1 (chunky) is assumed.</p>
     */
    public static final OntProperty planarConfiguration = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#planarConfiguration" );
    
    /** <p>The chromaticity of the three primary colors of the image. Normally this tag 
     *  is not necessary, since color space is specified in the color space information 
     *  tag (ColorSpace).原色の色度。CCIR REcommendation 709 primariesを使っている場合は、'640/1000,330/1000,300/1000,600/1000,150/1000,60/1000'という値。通常はColorSpaceタグがあるので不要</p>
     */
    public static final OntProperty primaryChromaticities = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#primaryChromaticities" );
    
    /** <p>A pointer to the print image matching IFD</p> */
    public static final OntProperty printImageMatching_IFD_Pointer = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#printImageMatching_IFD_Pointer" );
    
    /** <p>An attribute relating to recording offset</p> */
    public static final OntProperty recOffset = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#recOffset" );
    
    /** <p>画像情報の黒点・白点値。YCbCr形式の場合、最初の２つの値がY(輝度)の黒点・白点、次がCb、最後がCrとなり、デフォルト値は'0,255,0,128,0,128'。RGB形式の場合はR、G、Bの順で黒点・白点値が並んでおり、デフォルト値は'0,255,0,255,0,255'。The 
     *  reference black point value and reference white point value. The color space 
     *  is declared in a color space information tag, with the default being the value 
     *  that gives the optimal image characteristics Interoperability these conditions.</p>
     */
    public static final OntProperty referenceBlackWhite = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#referenceBlackWhite" );
    
    /** <p>Tag Relating to Related File Information</p> */
    public static final OntProperty relatedFile = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#relatedFile" );
    
    /** <p>画像フォーマットを'Exif JPEG Ver. 2.1'などの文字列で示す。通常はサムネィル画像に使うRelated image file format</p> */
    public static final OntProperty relatedImageFileFormat = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#relatedImageFileFormat" );
    
    /** <p>Related image length画像高。通常はサムネイル画像のInteroperability IFDに使う</p> */
    public static final OntProperty relatedImageLength = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#relatedImageLength" );
    
    /** <p>画像幅。通常はサムネイル画像のInteroperability IFDに使うRelated image width</p> */
    public static final OntProperty relatedImageWidth = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#relatedImageWidth" );
    
    /** <p>Related audio file画像と一緒に音声録音できる機種の場合に、音声ファイルの名前</p> */
    public static final OntProperty relatedSoundFile = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#relatedSoundFile" );
    
    /** <p>a rational number representing a resolution. Could be a subProperty of other 
     *  general schema.</p>
     */
    public static final OntProperty resolution = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#resolution" );
    
    /** <p>XResolution/YResolutionの解像度の単位The unit for measuring XResolution and YResolution. 
     *  The same unit is used for both XResolution and YResolution. If the image resolution 
     *  in unknown, 2 (inches) is designated.</p>
     */
    public static final OntProperty resolutionUnit = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#resolutionUnit" );
    
    /** <p>The number of rows per strip. This is the number of rows in the image of one 
     *  strip when an image is divided into strips. With JPEG compressed data this 
     *  designation is not needed and is omitted.</p>
     */
    public static final OntProperty rowsPerStrip = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#rowsPerStrip" );
    
    /** <p>The number of components per pixel. Since this standard applies to RGB and 
     *  YCbCr images, the value set for this tag is 3. In JPEG compressed data a JPEG 
     *  marker is used instead of this tag.</p>
     */
    public static final OntProperty samplesPerPixel = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#samplesPerPixel" );
    
    /** <p>The direction of saturation processing applied by the camera when the image 
     *  was shot.</p>
     */
    public static final OntProperty saturation = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#saturation" );
    
    /** <p>The type of scene that was shot. It can also be used to record the mode in 
     *  which the image was shot, such as Landscape, Portrait etc. Note that this 
     *  differs from the scene type (SceneType) tag.</p>
     */
    public static final OntProperty sceneCaptureType = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#sceneCaptureType" );
    
    /** <p>画像がどうやって撮られたか。デジカメの場合は通常1=A directly photographed imageThe type of scene. 
     *  If a DSC recorded the image, this tag value shall always be set to 1, indicating 
     *  that the image was directly photographed.</p>
     */
    public static final OntProperty sceneType = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#sceneType" );
    
    /** <p>a mesurement of time length with unit of second</p> */
    public static final OntProperty seconds = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#seconds" );
    
    /** <p>The image sensor type on the camera or input device, such as One-chip color 
     *  area sensor etc.イメージセンサーの形式。One-chip color area sensor、Color sequential area 
     *  sensor、Trilinear sensorなど</p>
     */
    public static final OntProperty sensingMethod = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#sensingMethod" );
    
    /** <p>The direction of sharpness processing applied by the camera when the image 
     *  was shot.</p>
     */
    public static final OntProperty sharpness = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#sharpness" );
    
    /** <p>シャッター速度（APEX値）。この値の2のベキ乗をとって逆数にすると、通常のシャッター速度表示になる。例えば'4'の場合だと1/(2^4)=1/16秒Shutter 
     *  speed. The unit is the APEX (Additive System of Photographic Exposure) setting</p>
     */
    public static final OntProperty shutterSpeedValue = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#shutterSpeedValue" );
    
    /** <p>デジカメ（もしくは入力機器）の内蔵ソフトウェア/ファームウェアの名称とバージョンThe name and version of the software 
     *  or firmware of the camera or image input device used to generate the image.</p>
     */
    public static final OntProperty software = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#software" );
    
    /** <p>This tag records the camera or input device spatial frequency table and SFR 
     *  values in the direction of image width, image height, and diagonal direction, 
     *  as specified in ISO 12233.</p>
     */
    public static final OntProperty spatialFrequencyResponse = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#spatialFrequencyResponse" );
    
    /** <p>Indicates the spectral sensitivity of each channel of the camera used. The 
     *  tag value is an ASCII string compatible with the standard developed by the 
     *  ASTM Technical committee.</p>
     */
    public static final OntProperty spectralSensitivity = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#spectralSensitivity" );
    
    /** <p>The total number of bytes in each strip. With JPEG compressed data this designation 
     *  is not needed and is omitted.</p>
     */
    public static final OntProperty stripByteCounts = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#stripByteCounts" );
    
    /** <p>For each strip, the byte offset of that strip. With JPEG compressed data this 
     *  designation is not needed and is omitted.</p>
     */
    public static final OntProperty stripOffsets = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#stripOffsets" );
    
    /** <p>DateTime subseconds</p> */
    public static final OntProperty subSecTime = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#subSecTime" );
    
    /** <p>DateTimeDigitized subseconds</p> */
    public static final OntProperty subSecTimeDigitized = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#subSecTimeDigitized" );
    
    /** <p>DateTimeOriginal subseconds</p> */
    public static final OntProperty subSecTimeOriginal = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#subSecTimeOriginal" );
    
    /** <p>The location and area of the main subject in the overall scene.画面中の主たる被写体の位置。2値によるXY座標、3値による円、4値による長方形座標の3通りの示し方がある</p> */
    public static final OntProperty subjectArea = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#subjectArea" );
    
    /** <p>被写体までの距離。単位はmThe distance to the subject, given in meters. Note that if the 
     *  numerator of the recorded value is FFFFFFFF.H, Infinity shall be indicated; 
     *  and if the numerator is 0, Distance unknown shall be indicated.</p>
     */
    public static final OntProperty subjectDistance = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#subjectDistance" );
    
    /** <p>The distance to the subject, such as Macro, Close View or Distant View.</p> */
    public static final OntProperty subjectDistanceRange = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#subjectDistanceRange" );
    
    /** <p>画面中の主要被写体のXY座標The location of the main subject in the scene. The value of 
     *  this tag represents the pixel at the center of the main subject relative to 
     *  the left edge, prior to rotation processing as per the Rotation tag. The first 
     *  value indicates the X column number and second indicates the Y row number.</p>
     */
    public static final OntProperty subjectLocation = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#subjectLocation" );
    
    public static final OntProperty subsecond = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#subsecond" );
    
    /** <p>A tag used to record fractions of seconds for a date property</p> */
    public static final OntProperty subseconds = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#subseconds" );
    
    public static final OntProperty tagNumber = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#tagNumber" );
    
    /** <p>The Exif tag number</p> */
    public static final OntProperty tag_number = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#tag_number" );
    
    /** <p>The Exif tag number with context prefix, such as IFD type or maker name</p> */
    public static final OntProperty tagid = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#tagid" );
    
    /** <p>A transfer function for the image, described in tabular style. Normally this 
     *  tag is not necessary, since color space is specified in the color space information 
     *  tag (ColorSpace).</p>
     */
    public static final OntProperty transferFunction = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#transferFunction" );
    
    /** <p>ユーザーコメント。ImageDescriptionタグと違って、こちらはJIS2バイトコード、Unicode等での記述が許されており、最初の8バイトが文字コードA 
     *  tag for Exif users to write keywords or comments on the image besides those 
     *  in ImageDescription, and without the character code limitations of the ImageDescription 
     *  tag. The character code used in the UserComment tag is identified based on 
     *  an ID code in a fixed 8-byte area at the start of the tag data area.</p>
     */
    public static final OntProperty userComment = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#userComment" );
    
    /** <p>An attribute relating to User Information</p> */
    public static final OntProperty userInfo = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#userInfo" );
    
    /** <p>An attribute relating to Version</p> */
    public static final OntProperty versionInfo = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#versionInfo" );
    
    /** <p>The white balance mode set when the image was shot.ホワイトバランスのモード</p> */
    public static final OntProperty whiteBalance = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#whiteBalance" );
    
    /** <p>白点の色度。CIE Standard Illuminant D65(いわゆる昼光色の世界標準値)を使っていれば、'3127/10000,3290/10000'という値。通常はColorSpaceタグがあるので不要The 
     *  chromaticity of the white point of the image. Normally this tag is not necessary, 
     *  since color space is specified in the color space information tag (ColorSpace).</p>
     */
    public static final OntProperty whitePoint = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#whitePoint" );
    
    /** <p>Width of an object</p> */
    public static final OntProperty width = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#width" );
    
    /** <p>The number of pixels per ResolutionUnit in the ImageWidth direction. When 
     *  the image resolution is unknown, 72 [dpi] is designated.画像の表示・印刷時の水平解像度</p>
     */
    public static final OntProperty xResolution = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#xResolution" );
    
    /** <p>RGB形式からYCbCr形式に変換するための3つの係数。通常は0.299、0.587、0.114という値The matrix coefficients 
     *  for transformation from RGB to YCbCr image data.</p>
     */
    public static final OntProperty yCbCrCoefficients = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#yCbCrCoefficients" );
    
    /** <p>The position of chrominance components in relation to the luminance component. 
     *  This field is designated only for JPEG compressed data or uncompressed YCbCr 
     *  data.色情報のサンプリングを間引きしている場合に、色情報のサンプルポイントがどこになるか。1='centered'なら点集合の中央、2＝'co-sited'なら点集合の原点</p>
     */
    public static final OntProperty yCbCrPositioning = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#yCbCrPositioning" );
    
    /** <p>The sampling ratio of chrominance components in relation to the luminance 
     *  component. In JPEG compressed data a JPEG marker is used instead of this tag.</p>
     */
    public static final OntProperty yCbCrSubSampling = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#yCbCrSubSampling" );
    
    /** <p>The number of pixels per ResolutionUnit in the ImageLength direction. The 
     *  same value as XResolution is designated.画像の表示・印刷時の垂直解像度</p>
     */
    public static final OntProperty yResolution = m_model.createOntProperty( "http://www.w3.org/2003/12/exif/ns#yResolution" );
    
    /** <p>An Image File Directory</p> */
    public static final OntClass IFD = m_model.createClass( "http://www.w3.org/2003/12/exif/ns#IFD" );
    
}
