/* CVS $Id: $ */
package net.opentechnology.triki.schema; 
import org.apache.jena.rdf.model.*;
import org.apache.jena.ontology.*;
 
/**
 * Vocabulary definitions from src/main/resources/rdf/activitystreams2.rdf 
 * @author Auto-generated by schemagen on 28 May 2019 14:26 
 */
public class Activitystreams2 {
    /** <p>The ontology model that holds the vocabulary terms</p> */
    private static OntModel m_model = ModelFactory.createOntologyModel( OntModelSpec.OWL_MEM, null );
    
    /** <p>The namespace of the vocabulary as a string</p> */
    public static final String NS = "http://www.w3.org/ns/activitystreams#";
    
    /** <p>The namespace of the vocabulary as a string</p>
     *  @see #NS */
    public static String getURI() {return NS;}
    
    /** <p>The namespace of the vocabulary as a resource</p> */
    public static final Resource NAMESPACE = m_model.createResource( NS );
    
    /** <p>Subproperty of as:attributedTo that identifies the primary actor</p> */
    public static final ObjectProperty actor = m_model.createObjectProperty( "http://www.w3.org/ns/activitystreams#actor" );
    
    /** <p>Describes a possible inclusive answer or option for a question.</p> */
    public static final ObjectProperty anyOf = m_model.createObjectProperty( "http://www.w3.org/ns/activitystreams#anyOf" );
    
    public static final ObjectProperty attachment = m_model.createObjectProperty( "http://www.w3.org/ns/activitystreams#attachment" );
    
    public static final ObjectProperty attachments = m_model.createObjectProperty( "http://www.w3.org/ns/activitystreams#attachments" );
    
    /** <p>Identifies an entity to which an object is attributed</p> */
    public static final ObjectProperty attributedTo = m_model.createObjectProperty( "http://www.w3.org/ns/activitystreams#attributedTo" );
    
    /** <p>Identifies the author of an object. Deprecated. Use as:attributedTo instead</p> */
    public static final ObjectProperty author = m_model.createObjectProperty( "http://www.w3.org/ns/activitystreams#author" );
    
    public static final ObjectProperty bcc = m_model.createObjectProperty( "http://www.w3.org/ns/activitystreams#bcc" );
    
    public static final ObjectProperty bto = m_model.createObjectProperty( "http://www.w3.org/ns/activitystreams#bto" );
    
    public static final ObjectProperty cc = m_model.createObjectProperty( "http://www.w3.org/ns/activitystreams#cc" );
    
    /** <p>Specifies the context within which an object exists or an activity was performed</p> */
    public static final ObjectProperty context = m_model.createObjectProperty( "http://www.w3.org/ns/activitystreams#context" );
    
    public static final ObjectProperty current = m_model.createObjectProperty( "http://www.w3.org/ns/activitystreams#current" );
    
    /** <p>On a Profile object, describes the object described by the profile</p> */
    public static final ObjectProperty describes = m_model.createObjectProperty( "http://www.w3.org/ns/activitystreams#describes" );
    
    public static final ObjectProperty first = m_model.createObjectProperty( "http://www.w3.org/ns/activitystreams#first" );
    
    public static final ObjectProperty generator = m_model.createObjectProperty( "http://www.w3.org/ns/activitystreams#generator" );
    
    public static final ObjectProperty icon = m_model.createObjectProperty( "http://www.w3.org/ns/activitystreams#icon" );
    
    public static final ObjectProperty image = m_model.createObjectProperty( "http://www.w3.org/ns/activitystreams#image" );
    
    public static final ObjectProperty inReplyTo = m_model.createObjectProperty( "http://www.w3.org/ns/activitystreams#inReplyTo" );
    
    /** <p>Indentifies an object used (or to be used) to complete an activity</p> */
    public static final ObjectProperty instrument = m_model.createObjectProperty( "http://www.w3.org/ns/activitystreams#instrument" );
    
    public static final ObjectProperty items = m_model.createObjectProperty( "http://www.w3.org/ns/activitystreams#items" );
    
    public static final ObjectProperty last = m_model.createObjectProperty( "http://www.w3.org/ns/activitystreams#last" );
    
    public static final ObjectProperty location = m_model.createObjectProperty( "http://www.w3.org/ns/activitystreams#location" );
    
    public static final ObjectProperty next = m_model.createObjectProperty( "http://www.w3.org/ns/activitystreams#next" );
    
    public static final ObjectProperty object = m_model.createObjectProperty( "http://www.w3.org/ns/activitystreams#object" );
    
    /** <p>Describes a possible exclusive answer or option for a question.</p> */
    public static final ObjectProperty oneOf = m_model.createObjectProperty( "http://www.w3.org/ns/activitystreams#oneOf" );
    
    /** <p>For certain activities, specifies the entity from which the action is directed.</p> */
    public static final ObjectProperty origin = m_model.createObjectProperty( "http://www.w3.org/ns/activitystreams#origin" );
    
    public static final ObjectProperty partOf = m_model.createObjectProperty( "http://www.w3.org/ns/activitystreams#partOf" );
    
    public static final ObjectProperty prev = m_model.createObjectProperty( "http://www.w3.org/ns/activitystreams#prev" );
    
    public static final ObjectProperty preview = m_model.createObjectProperty( "http://www.w3.org/ns/activitystreams#preview" );
    
    public static final ObjectProperty provider = m_model.createObjectProperty( "http://www.w3.org/ns/activitystreams#provider" );
    
    /** <p>On a Relationship object, describes the type of relationship</p> */
    public static final ObjectProperty relationship = m_model.createObjectProperty( "http://www.w3.org/ns/activitystreams#relationship" );
    
    public static final ObjectProperty replies = m_model.createObjectProperty( "http://www.w3.org/ns/activitystreams#replies" );
    
    public static final ObjectProperty result = m_model.createObjectProperty( "http://www.w3.org/ns/activitystreams#result" );
    
    public static final ObjectProperty scope = m_model.createObjectProperty( "http://www.w3.org/ns/activitystreams#scope" );
    
    /** <p>On a Relationship object, identifies the subject. e.g. when saying "John is 
     *  connected to Sally", 'subject' refers to 'John'</p>
     */
    public static final ObjectProperty subject = m_model.createObjectProperty( "http://www.w3.org/ns/activitystreams#subject" );
    
    public static final ObjectProperty tag = m_model.createObjectProperty( "http://www.w3.org/ns/activitystreams#tag" );
    
    public static final ObjectProperty tags = m_model.createObjectProperty( "http://www.w3.org/ns/activitystreams#tags" );
    
    public static final ObjectProperty target = m_model.createObjectProperty( "http://www.w3.org/ns/activitystreams#target" );
    
    public static final ObjectProperty to = m_model.createObjectProperty( "http://www.w3.org/ns/activitystreams#to" );
    
    /** <p>Specifies a link to a specific representation of the Object</p> */
    public static final ObjectProperty url = m_model.createObjectProperty( "http://www.w3.org/ns/activitystreams#url" );
    
    /** <p>Specifies the accuracy around the point established by the longitude and latitude</p> */
    public static final DatatypeProperty accuracy = m_model.createDatatypeProperty( "http://www.w3.org/ns/activitystreams#accuracy" );
    
    /** <p>The altitude of a place</p> */
    public static final DatatypeProperty altitude = m_model.createDatatypeProperty( "http://www.w3.org/ns/activitystreams#altitude" );
    
    /** <p>The content of the object.</p> */
    public static final DatatypeProperty content = m_model.createDatatypeProperty( "http://www.w3.org/ns/activitystreams#content" );
    
    public static final DatatypeProperty downstreamDuplicates = m_model.createDatatypeProperty( "http://www.w3.org/ns/activitystreams#downstreamDuplicates" );
    
    /** <p>The duration of the object</p> */
    public static final DatatypeProperty duration = m_model.createDatatypeProperty( "http://www.w3.org/ns/activitystreams#duration" );
    
    /** <p>The ending time of the object</p> */
    public static final DatatypeProperty endTime = m_model.createDatatypeProperty( "http://www.w3.org/ns/activitystreams#endTime" );
    
    /** <p>The display height expressed as device independent pixels</p> */
    public static final DatatypeProperty height = m_model.createDatatypeProperty( "http://www.w3.org/ns/activitystreams#height" );
    
    /** <p>The target URI of the Link</p> */
    public static final DatatypeProperty href = m_model.createDatatypeProperty( "http://www.w3.org/ns/activitystreams#href" );
    
    /** <p>A hint about the language of the referenced resource</p> */
    public static final DatatypeProperty hreflang = m_model.createDatatypeProperty( "http://www.w3.org/ns/activitystreams#hreflang" );
    
    public static final DatatypeProperty id = m_model.createDatatypeProperty( "http://www.w3.org/ns/activitystreams#id" );
    
    /** <p>The latitude</p> */
    public static final DatatypeProperty latitude = m_model.createDatatypeProperty( "http://www.w3.org/ns/activitystreams#latitude" );
    
    /** <p>The longitude</p> */
    public static final DatatypeProperty longitude = m_model.createDatatypeProperty( "http://www.w3.org/ns/activitystreams#longitude" );
    
    /** <p>The MIME Media Type</p> */
    public static final DatatypeProperty mediaType = m_model.createDatatypeProperty( "http://www.w3.org/ns/activitystreams#mediaType" );
    
    public static final DatatypeProperty name = m_model.createDatatypeProperty( "http://www.w3.org/ns/activitystreams#name" );
    
    public static final DatatypeProperty objectType = m_model.createDatatypeProperty( "http://www.w3.org/ns/activitystreams#objectType" );
    
    /** <p>Specifies the date and time the object was published</p> */
    public static final DatatypeProperty published = m_model.createDatatypeProperty( "http://www.w3.org/ns/activitystreams#published" );
    
    /** <p>Specifies a radius around the point established by the longitude and latitude</p> */
    public static final DatatypeProperty radius = m_model.createDatatypeProperty( "http://www.w3.org/ns/activitystreams#radius" );
    
    /** <p>A numeric rating (&gt;= 0.0, &lt;= 5.0) for the object</p> */
    public static final DatatypeProperty rating = m_model.createDatatypeProperty( "http://www.w3.org/ns/activitystreams#rating" );
    
    /** <p>The RFC 5988 or HTML5 Link Relation associated with the Link</p> */
    public static final DatatypeProperty rel = m_model.createDatatypeProperty( "http://www.w3.org/ns/activitystreams#rel" );
    
    /** <p>In a strictly ordered logical collection, specifies the index position of 
     *  the first item in the items list</p>
     */
    public static final DatatypeProperty startIndex = m_model.createDatatypeProperty( "http://www.w3.org/ns/activitystreams#startIndex" );
    
    /** <p>The starting time of the object</p> */
    public static final DatatypeProperty startTime = m_model.createDatatypeProperty( "http://www.w3.org/ns/activitystreams#startTime" );
    
    /** <p>A short summary of the object</p> */
    public static final DatatypeProperty summary = m_model.createDatatypeProperty( "http://www.w3.org/ns/activitystreams#summary" );
    
    /** <p>The total number of items in a logical collection</p> */
    public static final DatatypeProperty totalItems = m_model.createDatatypeProperty( "http://www.w3.org/ns/activitystreams#totalItems" );
    
    /** <p>Identifies the unit of measurement used by the radius, altitude and accuracy 
     *  properties. The value can be expressed either as one of a set of predefined 
     *  units or as a well-known common URI that identifies units.</p>
     */
    public static final DatatypeProperty units = m_model.createDatatypeProperty( "http://www.w3.org/ns/activitystreams#units" );
    
    /** <p>Specifies when the object was last updated</p> */
    public static final DatatypeProperty updated = m_model.createDatatypeProperty( "http://www.w3.org/ns/activitystreams#updated" );
    
    public static final DatatypeProperty upstreamDuplicates = m_model.createDatatypeProperty( "http://www.w3.org/ns/activitystreams#upstreamDuplicates" );
    
    public static final DatatypeProperty verb = m_model.createDatatypeProperty( "http://www.w3.org/ns/activitystreams#verb" );
    
    /** <p>Specifies the preferred display width of the content, expressed in terms of 
     *  device independent pixels.</p>
     */
    public static final DatatypeProperty width = m_model.createDatatypeProperty( "http://www.w3.org/ns/activitystreams#width" );
    
    /** <p>Actor accepts the Object</p> */
    public static final OntClass Accept = m_model.createClass( "http://www.w3.org/ns/activitystreams#Accept" );
    
    /** <p>An Object representing some form of Action that has been taken</p> */
    public static final OntClass Activity = m_model.createClass( "http://www.w3.org/ns/activitystreams#Activity" );
    
    /** <p>Any entity that can do something</p> */
    public static final OntClass Actor = m_model.createClass( "http://www.w3.org/ns/activitystreams#Actor" );
    
    /** <p>To Add an Object or Link to Something</p> */
    public static final OntClass Add = m_model.createClass( "http://www.w3.org/ns/activitystreams#Add" );
    
    /** <p>Actor announces the object to the target</p> */
    public static final OntClass Announce = m_model.createClass( "http://www.w3.org/ns/activitystreams#Announce" );
    
    /** <p>Represents a software application of any sort</p> */
    public static final OntClass Application = m_model.createClass( "http://www.w3.org/ns/activitystreams#Application" );
    
    /** <p>To Arrive Somewhere (can be used, for instance, to indicate that a particular 
     *  entity is currently located somewhere, e.g. a "check-in")</p>
     */
    public static final OntClass Arrive = m_model.createClass( "http://www.w3.org/ns/activitystreams#Arrive" );
    
    /** <p>A written work. Typically several paragraphs long. For example, a blog post 
     *  or a news article.</p>
     */
    public static final OntClass Article = m_model.createClass( "http://www.w3.org/ns/activitystreams#Article" );
    
    /** <p>An audio file</p> */
    public static final OntClass Audio = m_model.createClass( "http://www.w3.org/ns/activitystreams#Audio" );
    
    public static final OntClass Block = m_model.createClass( "http://www.w3.org/ns/activitystreams#Block" );
    
    /** <p>An ordered or unordered collection of Objects or Links</p> */
    public static final OntClass Collection = m_model.createClass( "http://www.w3.org/ns/activitystreams#Collection" );
    
    /** <p>A subset of items from a Collection</p> */
    public static final OntClass CollectionPage = m_model.createClass( "http://www.w3.org/ns/activitystreams#CollectionPage" );
    
    /** <p>To Create Something</p> */
    public static final OntClass Create = m_model.createClass( "http://www.w3.org/ns/activitystreams#Create" );
    
    /** <p>To Delete Something</p> */
    public static final OntClass Delete = m_model.createClass( "http://www.w3.org/ns/activitystreams#Delete" );
    
    /** <p>The actor dislikes the object</p> */
    public static final OntClass Dislike = m_model.createClass( "http://www.w3.org/ns/activitystreams#Dislike" );
    
    /** <p>Represents a digital document/file of any sort</p> */
    public static final OntClass Document = m_model.createClass( "http://www.w3.org/ns/activitystreams#Document" );
    
    /** <p>An Event of any kind</p> */
    public static final OntClass Event = m_model.createClass( "http://www.w3.org/ns/activitystreams#Event" );
    
    /** <p>To flag something (e.g. flag as inappropriate, flag as spam, etc)</p> */
    public static final OntClass Flag = m_model.createClass( "http://www.w3.org/ns/activitystreams#Flag" );
    
    /** <p>To Express Interest in Something</p> */
    public static final OntClass Follow = m_model.createClass( "http://www.w3.org/ns/activitystreams#Follow" );
    
    /** <p>A Group of any kind.</p> */
    public static final OntClass Group = m_model.createClass( "http://www.w3.org/ns/activitystreams#Group" );
    
    /** <p>Actor is ignoring the Object</p> */
    public static final OntClass Ignore = m_model.createClass( "http://www.w3.org/ns/activitystreams#Ignore" );
    
    /** <p>An Image file</p> */
    public static final OntClass Image = m_model.createClass( "http://www.w3.org/ns/activitystreams#Image" );
    
    /** <p>An Activity that has no direct object</p> */
    public static final OntClass IntransitiveActivity = m_model.createClass( "http://www.w3.org/ns/activitystreams#IntransitiveActivity" );
    
    /** <p>To invite someone or something to something</p> */
    public static final OntClass Invite = m_model.createClass( "http://www.w3.org/ns/activitystreams#Invite" );
    
    /** <p>To Join Something</p> */
    public static final OntClass Join = m_model.createClass( "http://www.w3.org/ns/activitystreams#Join" );
    
    /** <p>To Leave Something</p> */
    public static final OntClass Leave = m_model.createClass( "http://www.w3.org/ns/activitystreams#Leave" );
    
    /** <p>To Like Something</p> */
    public static final OntClass Like = m_model.createClass( "http://www.w3.org/ns/activitystreams#Like" );
    
    /** <p>Represents a qualified reference to another resource. Patterned after the 
     *  RFC5988 Web Linking Model</p>
     */
    public static final OntClass Link = m_model.createClass( "http://www.w3.org/ns/activitystreams#Link" );
    
    /** <p>The actor listened to the object</p> */
    public static final OntClass Listen = m_model.createClass( "http://www.w3.org/ns/activitystreams#Listen" );
    
    /** <p>A specialized Link that represents an @mention</p> */
    public static final OntClass Mention = m_model.createClass( "http://www.w3.org/ns/activitystreams#Mention" );
    
    /** <p>The actor is moving the object. The target specifies where the object is moving 
     *  to. The origin specifies where the object is moving from.</p>
     */
    public static final OntClass Move = m_model.createClass( "http://www.w3.org/ns/activitystreams#Move" );
    
    /** <p>A Short note, typically less than a single paragraph. A "tweet" is an example, 
     *  or a "status update"</p>
     */
    public static final OntClass Note = m_model.createClass( "http://www.w3.org/ns/activitystreams#Note" );
    
    public static final OntClass Object = m_model.createClass( "http://www.w3.org/ns/activitystreams#Object" );
    
    /** <p>To Offer something to someone or something</p> */
    public static final OntClass Offer = m_model.createClass( "http://www.w3.org/ns/activitystreams#Offer" );
    
    /** <p>A variation of Collection in which items are strictly ordered</p> */
    public static final OntClass OrderedCollection = m_model.createClass( "http://www.w3.org/ns/activitystreams#OrderedCollection" );
    
    /** <p>An ordered subset of items from an OrderedCollection</p> */
    public static final OntClass OrderedCollectionPage = m_model.createClass( "http://www.w3.org/ns/activitystreams#OrderedCollectionPage" );
    
    /** <p>A rdf:List variant for Objects and Links</p> */
    public static final OntClass OrderedItems = m_model.createClass( "http://www.w3.org/ns/activitystreams#OrderedItems" );
    
    /** <p>An Organization</p> */
    public static final OntClass Organization = m_model.createClass( "http://www.w3.org/ns/activitystreams#Organization" );
    
    /** <p>A Web Page</p> */
    public static final OntClass Page = m_model.createClass( "http://www.w3.org/ns/activitystreams#Page" );
    
    /** <p>A Person</p> */
    public static final OntClass Person = m_model.createClass( "http://www.w3.org/ns/activitystreams#Person" );
    
    /** <p>A physical or logical location</p> */
    public static final OntClass Place = m_model.createClass( "http://www.w3.org/ns/activitystreams#Place" );
    
    /** <p>A Profile Document</p> */
    public static final OntClass Profile = m_model.createClass( "http://www.w3.org/ns/activitystreams#Profile" );
    
    /** <p>A question of any sort.</p> */
    public static final OntClass Question = m_model.createClass( "http://www.w3.org/ns/activitystreams#Question" );
    
    /** <p>The actor read the object</p> */
    public static final OntClass Read = m_model.createClass( "http://www.w3.org/ns/activitystreams#Read" );
    
    /** <p>Actor rejects the Object</p> */
    public static final OntClass Reject = m_model.createClass( "http://www.w3.org/ns/activitystreams#Reject" );
    
    /** <p>Represents a Social Graph relationship between two Individuals (indicated 
     *  by the 'a' and 'b' properties)</p>
     */
    public static final OntClass Relationship = m_model.createClass( "http://www.w3.org/ns/activitystreams#Relationship" );
    
    /** <p>To Remove Something</p> */
    public static final OntClass Remove = m_model.createClass( "http://www.w3.org/ns/activitystreams#Remove" );
    
    /** <p>A service provided by some entity</p> */
    public static final OntClass Service = m_model.createClass( "http://www.w3.org/ns/activitystreams#Service" );
    
    /** <p>Actor tentatively accepts the Object</p> */
    public static final OntClass TentativeAccept = m_model.createClass( "http://www.w3.org/ns/activitystreams#TentativeAccept" );
    
    /** <p>Actor tentatively rejects the object</p> */
    public static final OntClass TentativeReject = m_model.createClass( "http://www.w3.org/ns/activitystreams#TentativeReject" );
    
    /** <p>The actor is traveling to the target. The origin specifies where the actor 
     *  is traveling from.</p>
     */
    public static final OntClass Travel = m_model.createClass( "http://www.w3.org/ns/activitystreams#Travel" );
    
    /** <p>To Undo Something. This would typically be used to indicate that a previous 
     *  Activity has been undone.</p>
     */
    public static final OntClass Undo = m_model.createClass( "http://www.w3.org/ns/activitystreams#Undo" );
    
    /** <p>To Update/Modify Something</p> */
    public static final OntClass Update = m_model.createClass( "http://www.w3.org/ns/activitystreams#Update" );
    
    /** <p>A Video document of any kind.</p> */
    public static final OntClass Video = m_model.createClass( "http://www.w3.org/ns/activitystreams#Video" );
    
    /** <p>The actor viewed the object</p> */
    public static final OntClass View = m_model.createClass( "http://www.w3.org/ns/activitystreams#View" );
    
    public static final Individual nil = m_model.createIndividual( "http://www.w3.org/1999/02/22-rdf-syntax-ns#nil", m_model.createClass( "http://www.w3.org/1999/02/22-rdf-syntax-ns#List" ) );
    
}
